Redoing dataset
Preparing dataset
/home/johannbs/anaconda3/lib/python3.8/site-packages/sklearn/utils/deprecation.py:143: FutureWarning: The sklearn.preprocessing.data module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.preprocessing. Anything that cannot be imported from sklearn.preprocessing is now part of the private API.
  warnings.warn(message, FutureWarning)
/home/johannbs/anaconda3/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator RobustScaler from version 0.19.1 when using version 0.23.2. This might lead to breaking code or invalid results. Use at your own risk.
  warnings.warn(
Connected to /home/johannbs/Desktop/IceCube_GNN/data/db_files/rasmus_classification_muon_3neutrino_3mio.db
Extracting features for train
  0%|                                                                                                      | 0/45 [00:00<?, ?it/s]  0%|                                                                                                      | 0/45 [01:14<?, ?it/s]
[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m~/Desktop/IceCube_GNN2/run_trainings.py[0m in [0;36m<module>[0;34m[0m
[1;32m     28[0m     [0;31m# Try to train the model given the construction dict[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     29[0m     [0;31m# try:[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 30[0;31m     [0mtrain_model[0m[0;34m([0m[0mconstruct_dict[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     31[0m     [0mshutil[0m[0;34m.[0m[0mmove[0m[0;34m([0m[0mosp[0m[0;34m.[0m[0mjoin[0m[0;34m([0m[0mexp_folder[0m[0;34m,[0m [0;34m"done"[0m[0;34m,[0m [0mexperiment[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     32[0m     [0mprint[0m[0;34m([0m[0;34mf"Experiment {experiment[:-5]} done \t {experiment}: {i} / {len(exp_list)}"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Desktop/IceCube_GNN2/scripts/train_script.py[0m in [0;36mtrain_model[0;34m(construct_dict)[0m
[1;32m     33[0m     [0;32mfrom[0m [0mscripts[0m[0;34m.[0m[0mdatasets[0m [0;32mimport[0m [0mgraph_dataset[0m[0;34m[0m[0;34m[0m[0m
[1;32m     34[0m [0;34m[0m[0m
[0;32m---> 35[0;31m     [0mtrain_data[0m    [0;34m=[0m [0mgraph_dataset[0m[0;34m([0m[0mconstruct_dict[0m[0;34m,[0m [0;34m"train"[0m[0;34m,[0m [0minitialize[0m [0;34m=[0m [0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     36[0m     [0mtrain_loader[0m  [0;34m=[0m [0mDisjointLoader[0m[0;34m([0m[0mtrain_data[0m[0;34m,[0m [0mepochs[0m [0;34m=[0m [0mepochs[0m[0;34m,[0m [0mbatch_size[0m [0;34m=[0m [0mbatch_size[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     37[0m [0;34m[0m[0m

[0;32m~/Desktop/IceCube_GNN2/scripts/datasets.py[0m in [0;36m__init__[0;34m(self, construct_dict, type, initialize)[0m
[1;32m     55[0m             [0mremove_dataset[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mData[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mGraphType[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mGraphParam[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     56[0m [0;34m[0m[0m
[0;32m---> 57[0;31m         [0msuper[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0m__init__[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     58[0m [0;34m[0m[0m
[1;32m     59[0m [0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.8/site-packages/spektral/data/dataset.py[0m in [0;36m__init__[0;34m(self, transforms, **kwargs)[0m
[1;32m    113[0m         [0;31m# Download data[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    114[0m         [0;32mif[0m [0;32mnot[0m [0mosp[0m[0;34m.[0m[0mexists[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mpath[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 115[0;31m             [0mself[0m[0;34m.[0m[0mdownload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    116[0m [0;34m[0m[0m
[1;32m    117[0m         [0;31m# Read graphs[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Desktop/IceCube_GNN2/scripts/datasets.py[0m in [0;36mdownload[0;34m(self)[0m
[1;32m    129[0m                         [0;32mif[0m [0mself[0m[0;34m.[0m[0mtransform[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    130[0m                             [0;32mfor[0m [0mcol[0m[0;34m,[0m [0mtrans[0m [0;32min[0m [0menumerate[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mfeatures[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 131[0;31m                                 [0mx_long[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m [0mcol[0m[0;34m][0m [0;34m=[0m [0mtransformers[0m[0;34m[[0m[0;34m"features"[0m[0;34m][0m[0;34m[[0m[0mtrans[0m[0;34m][0m[0;34m.[0m[0minverse_transform[0m[0;34m([0m[0mx_long[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m [0mcol[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    132[0m                             [0;32mfor[0m [0mcol[0m[0;34m,[0m [0mtrans[0m [0;32min[0m [0menumerate[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mtargets[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    133[0m                                 [0mys[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m [0mcol[0m[0;34m][0m     [0;34m=[0m [0mtransformers[0m[0;34m[[0m[0;34m"truth"[0m[0;34m][0m[0;34m[[0m[0mtrans[0m[0;34m][0m[0;34m.[0m[0minverse_transform[0m[0;34m([0m[0mys[0m[0;34m[[0m[0;34m:[0m[0;34m,[0m [0mcol[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.8/site-packages/sklearn/preprocessing/_data.py[0m in [0;36minverse_transform[0;34m(self, X)[0m
[1;32m   1271[0m         """
[1;32m   1272[0m         [0mcheck_is_fitted[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1273[0;31m         X = check_array(X, accept_sparse=('csr', 'csc'), copy=self.copy,
[0m[1;32m   1274[0m                         [0mestimator[0m[0;34m=[0m[0mself[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mFLOAT_DTYPES[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1275[0m                         force_all_finite='allow-nan')

[0;32m~/anaconda3/lib/python3.8/site-packages/sklearn/utils/validation.py[0m in [0;36minner_f[0;34m(*args, **kwargs)[0m
[1;32m     70[0m                           FutureWarning)
[1;32m     71[0m         [0mkwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0;34m{[0m[0mk[0m[0;34m:[0m [0marg[0m [0;32mfor[0m [0mk[0m[0;34m,[0m [0marg[0m [0;32min[0m [0mzip[0m[0;34m([0m[0msig[0m[0;34m.[0m[0mparameters[0m[0;34m,[0m [0margs[0m[0;34m)[0m[0;34m}[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 72[0;31m         [0;32mreturn[0m [0mf[0m[0;34m([0m[0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     73[0m     [0;32mreturn[0m [0minner_f[0m[0;34m[0m[0;34m[0m[0m
[1;32m     74[0m [0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.8/site-packages/sklearn/utils/validation.py[0m in [0;36mcheck_array[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator)[0m
[1;32m    617[0m             [0;31m# If input is 1D raise error[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    618[0m             [0;32mif[0m [0marray[0m[0;34m.[0m[0mndim[0m [0;34m==[0m [0;36m1[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 619[0;31m                 raise ValueError(
[0m[1;32m    620[0m                     [0;34m"Expected 2D array, got 1D array instead:\narray={}.\n"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    621[0m                     [0;34m"Reshape your data either using array.reshape(-1, 1) if "[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: Expected 2D array, got 1D array instead:
array=[ 0.79508795  0.79508795  1.29448004 ... -2.16434302 -2.16434302
 -1.66381614].
Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.

[23;0t